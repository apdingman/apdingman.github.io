<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Adam Dingman</title><link>https://apdingman.github.io/posts/</link><description>Recent content in Posts on Adam Dingman</description><image><url>https://apdingman.github.io/images/profile-photo.jpg</url><link>https://apdingman.github.io/images/profile-photo.jpg</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Apr 2022 22:06:15 -0500</lastBuildDate><atom:link href="https://apdingman.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Resource Level AWS IoT Logging</title><link>https://apdingman.github.io/posts/resource-level-iot-logging/</link><pubDate>Sun, 10 Apr 2022 22:06:15 -0500</pubDate><guid>https://apdingman.github.io/posts/resource-level-iot-logging/</guid><description>TL;DR: AWS recently announced the ability to configure log levels by client ID, source IP, or principal ID. See how to do it here.
Are you managing a fleet of devices on AWS IoT Core? If so, you likely know that the CloudWatch log group AWSIotLogsV2 can be your best friend for troubleshooting connectivity issues between devices and the IoT core broker. Scraping through logs in this log group can highlight some key information about the successes/failures of your deviceâ€™s connectivity like seen in Figure 1.</description></item></channel></rss>